{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0", "generated_at": "2024-12-16T10:19:26.644559Z", "invocation_id": "bd1ad556-c075-482f-b598-b75fd0119c6e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:25.320526Z", "completed_at": "2024-12-16T10:19:25.325245Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:25.326010Z", "completed_at": "2024-12-16T10:19:25.747426Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.43163251876831055, "adapter_response": {"_message": "CREATE TABLE (99 rows)", "rows_affected": 99, "query_id": "20241216_101907_00089_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.stg_orders\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders__dbt_tmp\"\n      \n      \n    as (\n      \n\n\nwith source as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"raw_orders\"\n),\norders as (\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n)\nselect * from orders\n    )"}, "message": "CREATE TABLE (99 rows)", "failures": null, "unique_id": "model.jaffle_shop.stg_orders", "compiled": true, "compiled_code": "\n\n\nwith source as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"raw_orders\"\n),\norders as (\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n)\nselect * from orders", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:25.322738Z", "completed_at": "2024-12-16T10:19:25.325759Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:25.347064Z", "completed_at": "2024-12-16T10:19:25.782158Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4678628444671631, "adapter_response": {"_message": "CREATE TABLE (113 rows)", "rows_affected": 113, "query_id": "20241216_101907_00088_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.stg_payments\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_payments__dbt_tmp\"\n      \n      \n    as (\n      \n\nwith source as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"raw_payments\"\n),\npayment as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n        amount / 100 as amount\n    from source\n)\nselect * from payment\n    )"}, "message": "CREATE TABLE (113 rows)", "failures": null, "unique_id": "model.jaffle_shop.stg_payments", "compiled": true, "compiled_code": "\n\nwith source as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"raw_payments\"\n),\npayment as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n        amount / 100 as amount\n    from source\n)\nselect * from payment", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:25.318059Z", "completed_at": "2024-12-16T10:19:25.325521Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:25.336610Z", "completed_at": "2024-12-16T10:19:25.798576Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.48658251762390137, "adapter_response": {"_message": "CREATE TABLE (100 rows)", "rows_affected": 100, "query_id": "20241216_101907_00090_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.stg_customers\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_customers__dbt_tmp\"\n      \n      \n    as (\n      \n\n\n\nwith source as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"raw_customers\"\n),\ncustomer as (\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n    from source\n)\nselect * from customer\n    )"}, "message": "CREATE TABLE (100 rows)", "failures": null, "unique_id": "model.jaffle_shop.stg_customers", "compiled": true, "compiled_code": "\n\n\n\nwith source as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"raw_customers\"\n),\ncustomer as (\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        email\n    from source\n)\nselect * from customer", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:25.751417Z", "completed_at": "2024-12-16T10:19:25.759202Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:25.759602Z", "completed_at": "2024-12-16T10:19:26.120093Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3708622455596924, "adapter_response": {"_message": "CREATE TABLE (62 rows)", "rows_affected": 62, "query_id": "20241216_101908_00099_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.customer_orders\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_orders__dbt_tmp\"\n      \n      \n    as (\n      \n\nwith orders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders\"\n),\nfinal as (\n    select\n        customer_id,\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n    group by 1\n)\nselect * from final\n    )"}, "message": "CREATE TABLE (62 rows)", "failures": null, "unique_id": "model.jaffle_shop.customer_orders", "compiled": true, "compiled_code": "\n\nwith orders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders\"\n),\nfinal as (\n    select\n        customer_id,\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n    group by 1\n)\nselect * from final", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:25.790052Z", "completed_at": "2024-12-16T10:19:25.798838Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:25.799584Z", "completed_at": "2024-12-16T10:19:26.186652Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3998446464538574, "adapter_response": {"_message": "CREATE TABLE (62 rows)", "rows_affected": 62, "query_id": "20241216_101908_00102_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.customer_payments\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_payments__dbt_tmp\"\n      \n      \n    as (\n      \n\nwith payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_payments\"\n),\norders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders\"\n),\nfinal as (\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n    from payments\n    left join orders using (order_id)\n    group by 1\n)\nselect * from final\n    )"}, "message": "CREATE TABLE (62 rows)", "failures": null, "unique_id": "model.jaffle_shop.customer_payments", "compiled": true, "compiled_code": "\n\nwith payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_payments\"\n),\norders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders\"\n),\nfinal as (\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n    from payments\n    left join orders using (order_id)\n    group by 1\n)\nselect * from final", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:25.792911Z", "completed_at": "2024-12-16T10:19:25.802332Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:25.803290Z", "completed_at": "2024-12-16T10:19:26.203943Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4163031578063965, "adapter_response": {"_message": "CREATE TABLE (99 rows)", "rows_affected": 99, "query_id": "20241216_101908_00101_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.order_payments\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"order_payments__dbt_tmp\"\n      \n      \n    as (\n      \n\n\nwith payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_payments\"\n),\nfinal as (\n    select\n        order_id,\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n    from payments\n    group by 1\n)\nselect * from final\n    )"}, "message": "CREATE TABLE (99 rows)", "failures": null, "unique_id": "model.jaffle_shop.order_payments", "compiled": true, "compiled_code": "\n\n\nwith payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_payments\"\n),\nfinal as (\n    select\n        order_id,\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n    from payments\n    group by 1\n)\nselect * from final", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"order_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:26.209355Z", "completed_at": "2024-12-16T10:19:26.213306Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:26.213638Z", "completed_at": "2024-12-16T10:19:26.612965Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.40521836280822754, "adapter_response": {"_message": "CREATE TABLE (99 rows)", "rows_affected": 99, "query_id": "20241216_101908_00113_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.fct_orders\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"fct_orders__dbt_tmp\"\n      \n      \n    as (\n      \n\n\nwith orders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders\"\n),\norder_payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"order_payments\"\n),\nfinal as (\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n        order_payments.credit_card_amount,\n        order_payments.coupon_amount,\n        order_payments.bank_transfer_amount,\n        order_payments.gift_card_amount,\n        order_payments.total_amount as amount\n    from orders\n    left join order_payments on orders.order_id = order_payments.order_id\n)\nselect * from final\n    )"}, "message": "CREATE TABLE (99 rows)", "failures": null, "unique_id": "model.jaffle_shop.fct_orders", "compiled": true, "compiled_code": "\n\n\nwith orders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_orders\"\n),\norder_payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"order_payments\"\n),\nfinal as (\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n        order_payments.credit_card_amount,\n        order_payments.coupon_amount,\n        order_payments.bank_transfer_amount,\n        order_payments.gift_card_amount,\n        order_payments.total_amount as amount\n    from orders\n    left join order_payments on orders.order_id = order_payments.order_id\n)\nselect * from final", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"fct_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-16T10:19:26.192094Z", "completed_at": "2024-12-16T10:19:26.195226Z"}, {"name": "execute", "started_at": "2024-12-16T10:19:26.195512Z", "completed_at": "2024-12-16T10:19:26.640301Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.44939494132995605, "adapter_response": {"_message": "CREATE TABLE (100 rows)", "rows_affected": 100, "query_id": "20241216_101908_00112_w5k94", "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.9.0\", \"profile_name\": \"jaffle_shop\", \"target_name\": \"dev\", \"node_id\": \"model.jaffle_shop.dim_customers\"} */\n\n  \n    \n\n    create table \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"dim_customers__dbt_tmp\"\n      \n      \n    as (\n      \n\nwith customers as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_customers\"\n),\ncustomer_orders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_orders\"\n),\ncustomer_payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_payments\"\n),\nfinal as (\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n    from customers\n    left join customer_orders on customers.customer_id = customer_orders.customer_id\n    left join customer_payments on customers.customer_id = customer_payments.customer_id\n)\nselect * from final\n    )"}, "message": "CREATE TABLE (100 rows)", "failures": null, "unique_id": "model.jaffle_shop.dim_customers", "compiled": true, "compiled_code": "\n\nwith customers as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"stg_customers\"\n),\ncustomer_orders as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_orders\"\n),\ncustomer_payments as (\n    select * from \"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"customer_payments\"\n),\nfinal as (\n    select\n        customers.customer_id,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n    from customers\n    left join customer_orders on customers.customer_id = customer_orders.customer_id\n    left join customer_payments on customers.customer_id = customer_payments.customer_id\n)\nselect * from final", "relation_name": "\"jaffle_shop_iceberg\".\"jaffle_shop_sc\".\"dim_customers\"", "batch_results": null}], "elapsed_time": 1.4457848072052002, "args": {"use_colors_file": true, "profiles_dir": "/dbt/profiles", "show_resource_report": false, "log_file_max_bytes": 10485760, "log_format": "default", "populate_cache": true, "send_anonymous_usage_stats": true, "empty": false, "quiet": false, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "partial_parse": true, "partial_parse_file_diff": true, "log_level_file": "debug", "exclude": [], "write_json": true, "skip_nodes_if_on_run_start_fails": false, "invocation_command": "dbt run --profiles-dir /dbt/profiles --project-dir /dbt/project", "strict_mode": false, "which": "run", "print": true, "introspect": true, "require_batched_execution_for_custom_microbatch_strategy": false, "source_freshness_run_project_hooks": false, "log_format_file": "debug", "require_nested_cumulative_type_params": false, "require_resource_names_without_spaces": false, "vars": {}, "macro_debugging": false, "state_modified_compare_more_unrendered_values": false, "log_level": "info", "defer": false, "static_parser": true, "project_dir": "/dbt/project", "use_colors": true, "printer_width": 80, "cache_selected_only": false, "log_path": "/dbt/project/logs", "require_explicit_package_overrides_for_builtin_materializations": true, "require_yaml_configuration_for_mf_time_spines": false, "indirect_selection": "eager", "select": [], "state_modified_compare_vars": false, "favor_state": false}}